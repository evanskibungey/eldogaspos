<?php\n\nnamespace App\\Console\\Commands;\n\nuse Illuminate\\Console\\Command;\n\nclass ToggleOfflineMode extends Command\n{\n    protected $signature = 'pos:offline-mode {mode : The mode to set (enable|disable|status)}';\n    protected $description = 'Toggle offline mode for the POS system';\n\n    public function handle()\n    {\n        $mode = $this->argument('mode');\n        $envFile = base_path('.env');\n\n        switch ($mode) {\n            case 'enable':\n                $this->updateEnvFile($envFile, 'OFFLINE_MODE_ENABLED', 'true');\n                $this->info('✅ Offline mode ENABLED');\n                $this->info('📱 The POS system will now work offline and sync when online');\n                $this->info('🔄 Please clear cache: php artisan config:clear');\n                break;\n\n            case 'disable':\n                $this->updateEnvFile($envFile, 'OFFLINE_MODE_ENABLED', 'false');\n                $this->info('✅ Offline mode DISABLED');\n                $this->info('💻 The POS system will only work online (good for development)');\n                $this->info('🔄 Please clear cache: php artisan config:clear');\n                break;\n\n            case 'status':\n                $this->showStatus();\n                break;\n\n            default:\n                $this->error('Invalid mode. Use: enable, disable, or status');\n                return 1;\n        }\n\n        return 0;\n    }\n\n    private function updateEnvFile($envFile, $key, $value)\n    {\n        if (!file_exists($envFile)) {\n            $this->error('.env file not found');\n            return;\n        }\n\n        $envContent = file_get_contents($envFile);\n        $pattern = \"/^{$key}=.*$/m\";\n        \n        if (preg_match($pattern, $envContent)) {\n            // Update existing line\n            $envContent = preg_replace($pattern, \"{$key}={$value}\", $envContent);\n        } else {\n            // Add new line\n            $envContent .= \"\\n{$key}={$value}\\n\";\n        }\n\n        file_put_contents($envFile, $envContent);\n    }\n\n    private function showStatus()\n    {\n        $enabled = config('offline.enabled', false);\n        \n        $this->info('🔍 Current Offline Mode Status:');\n        $this->line('');\n        \n        if ($enabled) {\n            $this->info('📱 Status: ENABLED');\n            $this->info('🌐 Mode: Production (works offline + online)');\n            $this->info('💾 Features: Offline sales, background sync, offline storage');\n        } else {\n            $this->info('💻 Status: DISABLED');\n            $this->info('🌐 Mode: Development (online only)');\n            $this->info('💾 Features: Online sales only, no offline capabilities');\n        }\n        \n        $this->line('');\n        $this->info('Available commands:');\n        $this->line('  php artisan pos:offline-mode enable   # Enable for production');\n        $this->line('  php artisan pos:offline-mode disable  # Disable for development');\n        \n        // Show configuration details if enabled\n        if ($enabled) {\n            $this->line('');\n            $this->info('📋 Configuration:');\n            $this->line('  Database: ' . config('offline.database.name'));\n            $this->line('  Sync Interval: ' . (config('offline.sync.auto_sync_interval') / 1000) . ' seconds');\n            $this->line('  Max Retries: ' . config('offline.sync.max_retry_attempts'));\n        }\n    }\n}